---
title: "Computo"
subtitle: "An academic journal promoting reproductibility via Quarto and Continuous Integration"
date: last-modified
date-modified: last-modified
toc: false
author:
  - name: Julien Chiquet
    affiliation: Univerisité Paris-Saclay/AgroParisTech/INRAE
    email: julien.chiquet@inrae.fr
    corresponding: true
  - name: Chloé Azencott
    affiliation: MinesParisTech
  - name: François-David Collin
    affiliation: IMAG/CNRS
  - name: Ghislain Durif
    affiliation: ENS Lyon/CNRS
  - name: Pierre Neuvial
    affiliation: IMT/CNRS
  - name: Mathurin Massias
    affiliation: INRIA Lyon OCKHAM
  - name: Nelle Varoquau
    afiliation: Université Grenoble Alpes/CNRS
format:
  computo-html: default
abstract: >
  Computo is a newborn journal published by the [French Statistical Society](https://sfds.asso.fr/) which aims at promoting computational/algorithmic contributions in statistics and machine learning. In order to achieve this goal, Computo goes beyond classical static publications by leveraging technical advances in literate programming and scientific reporting. We present in this talk the solution that we put in place so far to support both editorial and scientific reproducibility, that relies on community-based tools like Quarto, Github actions and open review. See our webpage \url{https://computo.sfds.asso.fr/}, and github group \url{https://github.com/computorg}.
keywords: Reproducible research --  Statistics -- Machine-Learning -- Quarto -- R -- Python -- Julia 
---

## About

### Aims and scope

Computo has been created in the context of a reproducibility crisis in science, which calls for higher standards in the publication of scientific results. Computo aims at promoting computational/algorithmic contributions in statistics and machine learning that provide insight into which models or methods are the most appropriate to address a specific scientific question. The journal welcomes the following types of contributions:

1. New methods with original stats/ML developments, or numerical studies that illustrate theoretical results in stats/ML;
2. Case studies or surveys on stats/ML methods to address a specific (type of) question in data analysis, neutral comparison studies that provide insight into when, how, and why the compared methods perform well or less well;
3. Software/tutorial papers to present implementations of stats/ML algorithms or to feature the use of a package/toolbox.

### An open access journal with reproducible contributions

Computo is free for readers and authors. It is an open access journal which means that all content is freely available without charge to the user or his/her institution. Users are allowed to read, download, copy, distribute, print, search, or link to the full texts of the articles, or use them for any other lawful purpose, without asking prior permission from the publisher or the author. This is in accordance with the [Budapest Open Access Initiative (BOAI)](https://www.budapestopenaccessinitiative.org/) definition of open access.

The reproducibility of numerical results is a necessary condition for publication in Computo. In particular, submissions must include all necessary data (e.g. via Zenodo repositories) and code. For contributions featuring the implementation of methods/algorithms, the quality of the provided code is assessed during the review process. We accept contributions in the form of notebooks formatted via Quarto (e.g. Rmarkdown, or Jupyter), including any king of coding languages. At this stage, Quarto-based templates are available for Python, R and Julia.

The reviews are open, i.e. visible to any reader after acceptance of the contribution. Reviewers may choose to remain anonymous or not.

## Submission

### Overview

Submissions to Computo require both scientific content (typically equations, codes and figures, data) and a proof that this content is reproducible. This is achieved by means of i) a notebook system, ii) a virtual environment fixing the dependencies and iii) continuous integration (plus, if needed, an external website to store data files such as Zenodo or OSF ).

A Computo submission is thus a git repository (e.g. Github or Gitlab) typically containing

- the source file of the notebook (a markdown file with yaml metadata) auxiliary files: a  file and some statics files, e.g. figures or small .csv data tables
- configuration files to set up the dependencies in a virtual environment
- configuration files to set up the continuous integration rendering the final documents
- The compiled notebook (both HTML and PDF) will be directly generated in the git(hub) repository via continuous integration (e.g., Github action or Gitlab CI) and published, if the action is successful, to a web page (e.g. gh-page).

The PDF and the git repository address are then submitted to the Computo submission platform.

More details can be found in the following templates, which serve as material for starting to write your submission, and as a documentation for doing so. The process is described in a dedicated post.

::: {.callout-note}
### Warning
We insist on the fact that Computo is not just about publishing a notebook and proving that your notebook can be compiled with CI. This part of the process is what we call _"Editorial Reproductibility"_. _"Scientific"_ or _"numerical"_ reproducibility^[We don't ask people reproducing their data... yet!] of all the analyses is also mandatory to published in Computo, as well as a classical peer-review evaluation.
:::

### Available templates

Templates are available from our [github group](). In particular, we have dedicated templates for setting everything up either for R, Python and Julia users:

- [Computo Template for R users](https://github.com/computorg/template-computo-R)
- [Computo Template for Python users](https://github.com/computorg/template-computo-python)
- [Computo Template for Julia users](https://github.com/computorg/template-computo-julia)

If you are attached to Jupyter book or do not prefer to use Quarto, you are still encouraged to submit to Computo:a Jupyter-myst template is available that requires more formatting work for production, but author comfort is a priority:

- [Jupyter Myst template](https://github.com/computorg/template-computo-myst)

##  Reviewing and publication

Submitted papers are reviewed by external reviewers selected by the Associate Editor in charge of the paper. Computo strives for fast reviewing cycles, but cannot provide strict guarantees on the matter; the current time between submission and publication is under six months.

In order to ensure an efficient reviewing process, authors are requested upon submission to suggest the names of four potential referees. To avoid conflicts of interests, recent co-authors or collaborators should not be suggested.

Computo’s accepted papers are published electronically immediately upon receipt under CC BY 4.0 license. Authors retain the copyright and full publishing rights without restrictions.

At the moment, Computo relies on Scholastica for the review process. We plan to migrate very soon to the [open review plateform](https://openreview.net/).

Once a manuscript is accepted, its reviews are made available on the finally rendered article as an issues associated to the git repository. Reviewers can choose to remain anonymous or not

## Published papers

At the moment, we have [3 published contributions](https://computo.sfds.asso.fr/publications/) and are processing 5 additional submissions. We strongly encourage you to submit your work to our journal.

## Perspectives

Boundaries between “editorial” and “scientific” reproductibilities are not always clear and may be blurred or moving. For example, some contributions which computational workloads completely fits the CI rendering process and provides also near-perfect reproductibility of their materials, if approved, achieve both reproductibilies in a single step. But other contributions, for example involving simulations, large amount of datas or complex deep-learning models may require a more “hands-on” reproductibility process. One of the perspective of Computo is to broaden the automated reproductibility scope to include more and more “scientific” reproductibility, and, ultimately, to provide authors a full array of computational ressources to allow them to include their own scientific reproductible results in the editorial process.